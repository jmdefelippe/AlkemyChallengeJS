{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\Programaci\\xF3n\\\\Proyectos\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport Operacion from '../components/Operacion';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\n\nconst Index = () => {\n  // routing \n  const router = useRouter(); // Extraer el Usuario autenticado del Storage \n\n  const AuthContext = useContext(authContext);\n  let {\n    usuario,\n    usuarioAutenticado\n  } = AuthContext; // extraer operaciones de state inicial\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    operaciones,\n    ingresos,\n    egresos,\n    balance,\n    calcularTotales\n  } = operacionesContext;\n  usuario = usuario || {};\n  let classBalance = \"\";\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    }\n\n    calcularTotales(); // eslint-disable-next-line\n  }, []);\n\n  const getClassBalance = classBalance => {\n    if (balance > 0) {\n      classBalance = \"text-green-500\";\n    } else if (balance < 0) {\n      classBalance = \"text-red-700\";\n    } else {\n      classBalance = \"font-normal text-black\";\n    }\n\n    return classBalance;\n  };\n\n  classBalance = getClassBalance(classBalance);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, usuario ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-xl md:text-2xl lg:text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Balance de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \" \", usuario.nombre)), __jsx(\"div\", {\n    className: \"grid md:w-4/5 xl:w-3/5 mx-auto mb-2 items-center bg-gray-300 rounded-lg px-5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Ingresos:\", __jsx(\"span\", {\n    className: \"font-normal text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \" $\", ingresos, \" \")), __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Egresos:\", __jsx(\"span\", {\n    className: \"font-normal text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \" $\", egresos, \" \")), __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Balance:\", __jsx(\"span\", {\n    className: classBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \" $\", balance, \" \"))), operaciones.length === 0 ? __jsx(\"p\", {\n    className: \"text-2xl font-sans font-bold text-blue-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }\n  }, \"No hay operaciones\") : __jsx(\"div\", {\n    className: \"bg-gray-300 rounded-lg px-5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, operaciones.map(operacion => __jsx(\"div\", {\n    key: operacion._id,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 39\n    }\n  }, \" \", __jsx(Operacion, {\n    operacion: operacion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 78\n    }\n  })))))) : __jsx(React.Fragment, null));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/Programación/Proyectos/AlkemyReactChallenge/cliente/pages/index.js"],"names":["React","useContext","useEffect","useRouter","Layout","Operacion","authContext","operacionContext","Index","router","AuthContext","usuario","usuarioAutenticado","operacionesContext","operaciones","ingresos","egresos","balance","calcularTotales","classBalance","token","localStorage","getItem","push","getClassBalance","nombre","length","map","operacion","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nimport Layout from '../components/Layout';\nimport Operacion from '../components/Operacion';\n\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\n\nconst Index = () => {\n\n    // routing \n    const router = useRouter();\n\n    // Extraer el Usuario autenticado del Storage \n    const AuthContext = useContext( authContext );\n    let { usuario, usuarioAutenticado } = AuthContext;\n\n    // extraer operaciones de state inicial\n    const operacionesContext = useContext(operacionContext);\n    const { operaciones, ingresos, egresos, balance, calcularTotales } = operacionesContext;\n\n    usuario = usuario || {};\n    let classBalance = \"\";\n\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n\n      if(token) {\n        usuarioAutenticado();\n      } else {\n        router.push('/login');\n      }\n    \n      calcularTotales();\n      // eslint-disable-next-line\n    }, []);\n\n    const getClassBalance = (classBalance) => {\n      if (balance > 0) {\n        classBalance = \"text-green-500\"\n      } else if (balance < 0) {\n        classBalance = \"text-red-700\"\n      } else {\n        classBalance = \"font-normal text-black\"\n      }\n\n      return classBalance;\n    }\n\n    classBalance = getClassBalance(classBalance);\n\n    return ( \n        <div>\n            {\n                usuario ? (\n                  <Layout>\n                      <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\n                        \n                        <h3 className=\"text-xl md:text-2xl lg:text-3xl font-sans font-bold text-black-500 text-center my-4\"\n                        >Balance de operaciones de\n                            <span className=\"text-blue-500\"> {usuario.nombre}</span>\n                        </h3>\n\n                        \n                        <div className=\"grid md:w-4/5 xl:w-3/5 mx-auto mb-2 items-center bg-gray-300 rounded-lg px-5 py-2\">\n                            <p className=\"font-bold text-blue-500 uppercase text-center mb-2\">Ingresos:\n                                <span className=\"font-normal text-black\"> ${ingresos} </span>\n                            </p>\n                            <p className=\"font-bold text-blue-500 uppercase text-center mb-2\">Egresos:\n                                <span className=\"font-normal text-black\"> ${egresos} </span>\n                            </p>\n                            <p className=\"font-bold text-blue-500 uppercase text-center\">Balance:\n                                <span className={classBalance}> ${balance} </span>\n                            </p>\n                        </div>\n\n                        { (operaciones.length === 0) ?\n                            (<p className=\"text-2xl font-sans font-bold text-blue-500 text-center my-4\">No hay operaciones</p>\n                            ) : (  \n\n                                <div className=\"bg-gray-300 rounded-lg px-5 py-2\">\n                                  {operaciones.map(operacion => \n                                      <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\n                                  )}\n                                </div>\n                        )}\n                      \n                      </div>\n                  </Layout>\n                ) : (\n                    <>\n                        \n                    </>\n                )\n            }\n\n        </div>\n  );\n}\n \nexport default Index;\n\n    \n\n"]},"metadata":{},"sourceType":"module"}