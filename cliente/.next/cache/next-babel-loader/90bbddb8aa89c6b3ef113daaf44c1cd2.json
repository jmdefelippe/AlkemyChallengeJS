{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\crearcuenta.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport Link from 'next/link';\nimport * as Yup from 'yup';\nimport Alerta from '../components/Alerta';\nimport Layout from '../components/Layout';\nimport Swal from 'sweetalert2';\nimport alertaContext from '../context/alertas/alertaContext';\nimport authContext from '../context/auth/authContext';\n\nvar CrearCuenta = function CrearCuenta() {\n  _s();\n\n  // extraer los valores del context\n  var AlertaContext = useContext(alertaContext);\n  var alerta = AlertaContext.alerta,\n      mostrarAlerta = AlertaContext.mostrarAlerta; // Acceder al state\n\n  var AuthContext = useContext(authContext);\n  var mensaje = AuthContext.mensaje,\n      autenticado = AuthContext.autenticado,\n      registrarUsuario = AuthContext.registrarUsuario; // Next router\n\n  var router = useRouter();\n  useEffect(function () {\n    if (autenticado) {\n      router.push('/');\n    }\n    /*    \n        if(mensaje) {\n          mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n    */\n\n  }, [autenticado]); // Formulario y validación con formik y Yup\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      email: '',\n      password: '',\n      confirmarPassword: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El Nombre es Obligatorio'),\n      email: Yup.string().email('El email no es válido').required('El Email es Obligatorio'),\n      password: Yup.string().required('El password no puede ir vacio').min(6, 'El password debe contener al menos 6 caracteres'),\n      confirmarPassword: Yup.string().required('El password no puede ir vacio').min(6, 'El password debe contener al menos 6 caracteres').oneOf([Yup.ref('password'), null], 'Los Passwords no coinciden')\n    }),\n    onSubmit: function onSubmit(valores) {\n      registrarUsuario(valores);\n      /*\n                // mostrar mensaje ok\n                Swal.fire({\n                  position: 'center',\n                  icon: 'success',\n                  title: 'Cuenta creada',\n                  width: 400,\n                  height: 400,\n                  timer: 2000,\n                  confirmButtonColor: '#60A5FA',\n                  confirmButtonText: 'Ok!',\n                })\n                \n      */\n\n      if (mensaje.categoria === 'alerta-ok') {\n        router.push('/login');\n      }\n\n      ;\n    }\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Crear Cuenta\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-20\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    placeholder: \"Nombre de Usuario\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 27\n    }\n  }), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, formik.errors.nombre, \" \")) : null), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 27\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    placeholder: \"Email de Usuario\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 27\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, formik.errors.email, \" \")) : null), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 27\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    placeholder: \"Password de Usuario\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 27\n    }\n  }), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, formik.errors.password, \" \")) : null), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"confirmarPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 27\n    }\n  }, \"Confirmar Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"confirmarPassword\",\n    placeholder: \"Repite la Password\",\n    value: formik.values.confirmarPassword,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 27\n    }\n  }), formik.touched.confirmarPassword && formik.errors.confirmarPassword ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, formik.errors.confirmarPassword, \" \")) : null), __jsx(\"div\", {\n    className: \"grid grid-cols-1 divide-y divide-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-blue-400 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold mt-3 mb-6\",\n    value: \"Crear Cuenta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, __jsx(Link, {\n    href: \"/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    className: \"text-gray-800 text-sm-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 31\n    }\n  }, \"Iniciar sesi\\xF3n en una cuenta existente\")))), alerta && __jsx(Alerta, {\n    msg: alerta.msg,\n    categoria: alerta.categoria,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 35\n    }\n  }))))));\n};\n\n_s(CrearCuenta, \"ZBqLqTyCzIocHCFq4fiWOKWAwLs=\", false, function () {\n  return [useRouter, useFormik];\n});\n\n_c = CrearCuenta;\nexport default CrearCuenta;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrearCuenta\");","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/crearcuenta.js"],"names":["React","useContext","useEffect","useRouter","useFormik","Link","Yup","Alerta","Layout","Swal","alertaContext","authContext","CrearCuenta","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","registrarUsuario","router","push","formik","initialValues","nombre","email","password","confirmarPassword","validationSchema","object","string","required","min","oneOf","ref","onSubmit","valores","categoria","handleSubmit","values","handleChange","touched","errors","msg"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\n\nimport Link from 'next/link';\nimport * as Yup from 'yup';\n\nimport Alerta from '../components/Alerta'\nimport Layout from '../components/Layout';\nimport Swal from 'sweetalert2';\n\nimport alertaContext from '../context/alertas/alertaContext';\nimport authContext from '../context/auth/authContext';\n\nconst CrearCuenta = () => {\n\n  // extraer los valores del context\n  const AlertaContext = useContext(alertaContext);\n  const { alerta, mostrarAlerta } = AlertaContext;\n\n  // Acceder al state\n  const AuthContext = useContext(authContext);\n  const { mensaje, autenticado, registrarUsuario } = AuthContext;\n\n  // Next router\n  const router = useRouter();\n  \n  useEffect(() => {\n    \n    if(autenticado) {\n      router.push('/');\n    }\n\n/*    \n    if(mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n*/\n  }, [autenticado]);\n\n  // Formulario y validación con formik y Yup\n  const formik = useFormik({\n      initialValues: {\n        nombre: '',\n        email: '',\n        password: '',\n        confirmarPassword: ''\n      },\n      \n      validationSchema: Yup.object({\n          nombre: Yup.string()\n                    .required('El Nombre es Obligatorio'),\n          email: Yup.string()\n                    .email('El email no es válido')\n                    .required('El Email es Obligatorio'),\n          password: Yup.string()\n                    .required('El password no puede ir vacio')\n                    .min(6, 'El password debe contener al menos 6 caracteres'),\n          confirmarPassword: Yup.string()\n                    .required('El password no puede ir vacio')\n                    .min(6, 'El password debe contener al menos 6 caracteres')\n                    .oneOf([Yup.ref('password'), null], 'Los Passwords no coinciden')\n      }),\n     \n      onSubmit: valores => {\n          registrarUsuario(valores);\n/*\n          // mostrar mensaje ok\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: 'Cuenta creada',\n            width: 400,\n            height: 400,\n            timer: 2000,\n            confirmButtonColor: '#60A5FA',\n            confirmButtonText: 'Ok!',\n          })\n          \n*/\n        if (mensaje.categoria === 'alerta-ok') { router.push('/login') };\n          \n    }\n  });\n\n  return ( \n    <Layout>\n\n        <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\n          <h2 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\">Crear Cuenta</h2>\n\n          <div className=\"flex justify-center mt-5\">\n              <div className=\"w-full max-w-lg\">\n                  <form\n                    className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-20\"\n                    onSubmit={formik.handleSubmit}\n                  >\n                      <div className=\"mb-4\">\n                          <label \n                            className=\"block text-black text-sm font-bold mb-2\"\n                            htmlFor=\"nombre\"\n                          >Nombre</label>\n                          <input\n                              type=\"text\"\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                              id=\"nombre\"\n                              placeholder=\"Nombre de Usuario\"\n                              value={formik.values.nombre}\n                              onChange={formik.handleChange}\n                          />\n\n                          { formik.touched.nombre && formik.errors.nombre ? (\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.nombre} </p>\n                            </div>\n                          ) : null }\n                      </div>\n\n                      <div className=\"mb-4\">\n                          <label \n                            className=\"block text-black text-sm font-bold mb-2\"\n                            htmlFor=\"email\"\n                          >Email</label>\n                          <input\n                              type=\"email\"\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                              id=\"email\"\n                              placeholder=\"Email de Usuario\"\n                              value={formik.values.email}\n                              onChange={formik.handleChange}\n                          />\n                          { formik.touched.email && formik.errors.email ? (\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.email} </p>\n                            </div>\n                          ) : null }\n                      </div>\n\n                      <div className=\"mb-4\">\n                          <label \n                            className=\"block text-black text-sm font-bold mb-2\"\n                            htmlFor=\"password\"\n                          >Password</label>\n                          <input\n                              type=\"password\"\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                              id=\"password\"\n                              placeholder=\"Password de Usuario\"\n                              value={formik.values.password}\n                              onChange={formik.handleChange}\n                          />\n                          { formik.touched.password && formik.errors.password ? (\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.password} </p>\n                            </div>\n                          ) : null }\n                      </div>\n\n                      <div className=\"mb-4\">\n                          <label \n                            className=\"block text-black text-sm font-bold mb-2\"\n                            htmlFor=\"confirmarPassword\"\n                          >Confirmar Password</label>\n                          <input\n                              type=\"password\"\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                              id=\"confirmarPassword\"\n                              placeholder=\"Repite la Password\"\n                              value={formik.values.confirmarPassword}\n                              onChange={formik.handleChange}\n                          />\n                          { formik.touched.confirmarPassword && formik.errors.confirmarPassword ? (\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.confirmarPassword} </p>\n                            </div>\n                          ) : null }\n                      </div>\n\n                      <div className=\"grid grid-cols-1 divide-y divide-gray-400\">\n                        <input \n                          type=\"submit\"\n                          className=\"bg-blue-400 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold mt-3 mb-6\"\n                          value=\"Crear Cuenta\"\n                        />\n                        \n                        <div className=\"text-center\">\n                            <Link href=\"/login\">\n                              <a className=\"text-gray-800 text-sm-1\">Iniciar sesión en una cuenta existente</a>\n                            </Link>\n                          </div>\n                      </div>\n\n                      { alerta && <Alerta msg={alerta.msg} categoria={alerta.categoria} /> }\n                      {/* alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> ): null */}\n\n                  </form>\n                  \n              </div>\n          </div>\n        </div>\n    </Layout>\n   );\n}\n \nexport default CrearCuenta;"]},"metadata":{},"sourceType":"module"}