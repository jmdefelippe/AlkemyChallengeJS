{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport Link from 'next/link';\nimport * as Yup from 'yup';\nimport Alerta from '../components/Alerta';\nimport Layout from '../components/Layout';\nimport alertaContext from '../context/alertas/alertaContext';\nimport authContext from '../context/auth/authContext';\n\nconst Login = () => {\n  // Next router\n  const router = useRouter(); // definir el context\n\n  const AuthContext = useContext(authContext);\n  const {\n    mensaje,\n    autenticado,\n    iniciarSesion\n  } = AuthContext; // extraer los valores del context\n\n  const AlertaContext = useContext(alertaContext);\n  const {\n    alerta,\n    mostrarAlerta\n  } = AlertaContext;\n  useEffect(() => {\n    if (autenticado) {\n      router.push('/');\n    } else {\n      router.push('/login');\n    }\n    /*\n          if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n          }*/\n\n  }, [autenticado]); // Formulario y validación con formik y Yup\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es válido').required('El Email es Obligatorio'),\n      password: Yup.string().required('El password no puede ir vacio')\n    }),\n    onSubmit: valores => {\n      iniciarSesion(valores);\n    }\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Iniciar Sesi\\xF3n\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-20\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 27\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    placeholder: \"Email de Usuario\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, formik.errors.email, \" \")) : null), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    placeholder: \"Password de Usuario\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 27\n    }\n  }), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, formik.errors.password, \" \")) : null), __jsx(\"div\", {\n    className: \"grid grid-cols-1 divide-y divide-gray-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-blue-400 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold mt-3 mb-6\",\n    value: \"Iniciar Sesi\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 27\n    }\n  }), __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 27\n    }\n  }, __jsx(Link, {\n    href: \"/crearcuenta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    className: \"text-gray-800 text-sm-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 31\n    }\n  }, \"Crear cuenta nueva\")))))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/login.js"],"names":["React","useContext","useEffect","useRouter","useFormik","Link","Yup","Alerta","Layout","alertaContext","authContext","Login","router","AuthContext","mensaje","autenticado","iniciarSesion","AlertaContext","alerta","mostrarAlerta","push","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","valores","handleSubmit","values","handleChange","touched","errors"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\n\nimport Link from 'next/link';\nimport * as Yup from 'yup';\n\nimport Alerta from '../components/Alerta';\nimport Layout from '../components/Layout';\n\nimport alertaContext from '../context/alertas/alertaContext';\nimport authContext from '../context/auth/authContext';\n\nconst Login = () => {\n    \n    // Next router\n    const router = useRouter();\n\n    // definir el context\n    const AuthContext = useContext(authContext);\n    const { mensaje, autenticado, iniciarSesion } = AuthContext;\n\n    // extraer los valores del context\n    const AlertaContext = useContext(alertaContext);\n    const { alerta, mostrarAlerta } = AlertaContext;\n\n    useEffect(() => {\n      if(autenticado) {\n        router.push('/');\n      } else {\n        router.push('/login');\n      }\n/*\n      if(mensaje) {\n        mostrarAlerta(mensaje.msg, mensaje.categoria);\n      }*/\n    }, [autenticado]);\n\n    // Formulario y validación con formik y Yup\n    const formik = useFormik({\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                      .email('El email no es válido')\n                      .required('El Email es Obligatorio'),\n            password: Yup.string()\n                      .required('El password no puede ir vacio')\n        }),\n        onSubmit: valores => {\n          iniciarSesion(valores)\n        }\n    });\n\n\n  return ( \n    <Layout>\n        <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\n          <h2 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\">Iniciar Sesión</h2>\n\n          <div className=\"flex justify-center mt-5\">\n              <div className=\"w-full max-w-lg\">\n                  <form\n                    className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-20\"\n                    onSubmit={formik.handleSubmit}\n                  >\n                    \n                      <div className=\"mb-4\">\n                          <label \n                            className=\"block text-black text-sm font-bold mb-2\"\n                            htmlFor=\"email\"\n                          >Email</label>\n                          <input\n                              type=\"email\"\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                              id=\"email\"\n                              placeholder=\"Email de Usuario\"\n                              value={formik.values.email}\n                              onChange={formik.handleChange}\n                          />\n                          { formik.touched.email && formik.errors.email ? (\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.email} </p>\n                            </div>\n                          ) : null }\n                      </div>\n\n                      <div className=\"mb-4\">\n                          <label \n                            className=\"block text-black text-sm font-bold mb-2\"\n                            htmlFor=\"password\"\n                          >Password</label>\n                          <input\n                              type=\"password\"\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                              id=\"password\"\n                              placeholder=\"Password de Usuario\"\n                              value={formik.values.password}\n                              onChange={formik.handleChange}\n                          />\n                          { formik.touched.password && formik.errors.password ? (\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.password} </p>\n                            </div>\n                          ) : null }\n                      </div>\n\n                      <div className=\"grid grid-cols-1 divide-y divide-gray-400\">\n                          <input \n                            type=\"submit\"\n                            className=\"bg-blue-400 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold mt-3 mb-6\"\n                            value=\"Iniciar Sesión\"\n                          />\n\n                          <div className=\"text-center\">\n                            <Link href=\"/crearcuenta\">\n                              <a className=\"text-gray-800 text-sm-1\">Crear cuenta nueva</a>\n                            </Link>\n                          </div>\n                      </div>\n\n                      { /* mensaje && <Alerta /> */ }\n                      { /* alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> ): null */}\n\n                  </form>\n              </div>\n          </div>\n        </div>\n    </Layout>\n   );\n}\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}