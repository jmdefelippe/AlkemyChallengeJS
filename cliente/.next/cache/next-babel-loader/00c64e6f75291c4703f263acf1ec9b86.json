{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\Programaci\\xF3n\\\\Proyectos\\\\AlkemyReactChallenge\\\\cliente\\\\components\\\\Balance.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport Operacion from '../components/Operacion';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\n\nvar Balance = function Balance() {\n  _s();\n\n  // routing \n  var router = useRouter(); // Extraer el Usuario autenticado del Storage \n\n  var AuthContext = useContext(authContext);\n  var usuario = AuthContext.usuario,\n      usuarioAutenticado = AuthContext.usuarioAutenticado; // extraer operaciones de state inicial\n\n  var operacionesContext = useContext(operacionContext);\n  var operaciones = operacionesContext.operaciones,\n      ingresos = operacionesContext.ingresos,\n      egresos = operacionesContext.egresos,\n      balance = operacionesContext.balance,\n      calcularTotales = operacionesContext.calcularTotales;\n  usuario = usuario || {};\n  var classBalance = \"\";\n  useEffect(function () {\n    var token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    }\n\n    calcularTotales(); // eslint-disable-next-line\n  }, []);\n\n  var getClassBalance = function getClassBalance(classBalance) {\n    if (balance > 0) {\n      classBalance = \"text-green-500\";\n    } else if (balance < 0) {\n      classBalance = \"text-red-700\";\n    } else {\n      classBalance = \"font-normal text-black\";\n    }\n\n    return classBalance;\n  };\n\n  classBalance = getClassBalance(classBalance);\n  return __jsx(\"div\", {\n    className: \"grid md:w-4/5 xl:w-3/5 mx-auto mb-2 items-center bg-gray-300 rounded-lg px-5 py-2 mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Ingresos:\", __jsx(\"span\", {\n    className: \"font-normal text-black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \" $\", ingresos, \" \")), __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Egresos:\", __jsx(\"span\", {\n    className: \"font-normal text-black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \" $\", egresos, \" \")), __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Balance:\", __jsx(\"span\", {\n    className: classBalance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" $\", balance, \" \")));\n};\n\n_s(Balance, \"m9jVNsLFYMgUcgfYzkk4MOqfXNU=\", false, function () {\n  return [useRouter];\n});\n\n_c = Balance;\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["C:/Users/Joan/Desktop/Programación/Proyectos/AlkemyReactChallenge/cliente/components/Balance.js"],"names":["React","useContext","useEffect","useRouter","Layout","Operacion","authContext","operacionContext","Balance","router","AuthContext","usuario","usuarioAutenticado","operacionesContext","operaciones","ingresos","egresos","balance","calcularTotales","classBalance","token","localStorage","getItem","push","getClassBalance"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAElB;AACA,MAAMC,MAAM,GAAGN,SAAS,EAAxB,CAHkB,CAKlB;;AACA,MAAMO,WAAW,GAAGT,UAAU,CAAEK,WAAF,CAA9B;AANkB,MAOZK,OAPY,GAOoBD,WAPpB,CAOZC,OAPY;AAAA,MAOHC,kBAPG,GAOoBF,WAPpB,CAOHE,kBAPG,EASlB;;AACA,MAAMC,kBAAkB,GAAGZ,UAAU,CAACM,gBAAD,CAArC;AAVkB,MAWVO,WAXU,GAWmDD,kBAXnD,CAWVC,WAXU;AAAA,MAWGC,QAXH,GAWmDF,kBAXnD,CAWGE,QAXH;AAAA,MAWaC,OAXb,GAWmDH,kBAXnD,CAWaG,OAXb;AAAA,MAWsBC,OAXtB,GAWmDJ,kBAXnD,CAWsBI,OAXtB;AAAA,MAW+BC,eAX/B,GAWmDL,kBAXnD,CAW+BK,eAX/B;AAalBP,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIQ,YAAY,GAAG,EAAnB;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAGF,KAAH,EAAU;AACRR,MAAAA,kBAAkB;AACnB,KAFD,MAEO;AACLH,MAAAA,MAAM,CAACc,IAAP,CAAY,QAAZ;AACD;;AAEDL,IAAAA,eAAe,GATD,CAUd;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACL,YAAD,EAAkB;AACxC,QAAIF,OAAO,GAAG,CAAd,EAAiB;AACfE,MAAAA,YAAY,GAAG,gBAAf;AACD,KAFD,MAEO,IAAIF,OAAO,GAAG,CAAd,EAAiB;AACtBE,MAAAA,YAAY,GAAG,cAAf;AACD,KAFM,MAEA;AACLA,MAAAA,YAAY,GAAG,wBAAf;AACD;;AAED,WAAOA,YAAP;AACD,GAVD;;AAYAA,EAAAA,YAAY,GAAGK,eAAe,CAACL,YAAD,CAA9B;AAGA,SAEI;AAAK,IAAA,SAAS,EAAC,wFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,oDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4CJ,QAA5C,MADJ,CADJ,EAII;AAAG,IAAA,SAAS,EAAC,oDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4CC,OAA5C,MADJ,CAJJ,EAOI;AAAG,IAAA,SAAS,EAAC,+CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAM,IAAA,SAAS,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCF,OAAlC,MADJ,CAPJ,CAFJ;AAgBH,CA5DD;;GAAMT,O;UAGaL,S;;;KAHbK,O;AA8DN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport Layout from '../components/Layout';\r\nimport Operacion from '../components/Operacion';\r\n\r\nimport authContext from '../context/auth/authContext';\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\n\r\nconst Balance = () => {\r\n    \r\n    // routing \r\n    const router = useRouter();\r\n\r\n    // Extraer el Usuario autenticado del Storage \r\n    const AuthContext = useContext( authContext );\r\n    let { usuario, usuarioAutenticado } = AuthContext;\r\n\r\n    // extraer operaciones de state inicial\r\n    const operacionesContext = useContext(operacionContext);\r\n    const { operaciones, ingresos, egresos, balance, calcularTotales } = operacionesContext;\r\n\r\n    usuario = usuario || {};\r\n    let classBalance = \"\";\r\n\r\n    useEffect(() => {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if(token) {\r\n        usuarioAutenticado();\r\n      } else {\r\n        router.push('/login');\r\n      }\r\n    \r\n      calcularTotales();\r\n      // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const getClassBalance = (classBalance) => {\r\n      if (balance > 0) {\r\n        classBalance = \"text-green-500\"\r\n      } else if (balance < 0) {\r\n        classBalance = \"text-red-700\"\r\n      } else {\r\n        classBalance = \"font-normal text-black\"\r\n      }\r\n\r\n      return classBalance;\r\n    }\r\n\r\n    classBalance = getClassBalance(classBalance);\r\n\r\n    \r\n    return (\r\n\r\n        <div className=\"grid md:w-4/5 xl:w-3/5 mx-auto mb-2 items-center bg-gray-300 rounded-lg px-5 py-2 mb-5\">\r\n            <p className=\"font-bold text-blue-500 uppercase text-center mb-2\">Ingresos:\r\n                <span className=\"font-normal text-black\"> ${ingresos} </span>\r\n            </p>\r\n            <p className=\"font-bold text-blue-500 uppercase text-center mb-2\">Egresos:\r\n                <span className=\"font-normal text-black\"> ${egresos} </span>\r\n            </p>\r\n            <p className=\"font-bold text-blue-500 uppercase text-center\">Balance:\r\n                <span className={classBalance}> ${balance} </span>\r\n            </p>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n \r\nexport default Balance;"]},"metadata":{},"sourceType":"module"}