{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport authContext from '../context/auth/authContext';\nimport { useRouter } from 'next/router';\n\nconst Index = () => {\n  // routing \n  const router = useRouter(); // Extraer el Usuario autenticado del Storage \n\n  const AuthContext = useContext(authContext);\n  const {\n    usuario,\n    usuarioAutenticado\n  } = AuthContext; // extraer operaciones de state inicial\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    operaciones,\n    mensaje,\n    obtenerOperaciones\n  } = operacionesContext;\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    }\n  }, []); // revisar si operaciones tiene contenido\n\n  if (operaciones.length === 0) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }\n  }, \"No hay operaciones\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, usuario ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Balance de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }\n  }, \" \", usuario.nombre)), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }\n  }, \"Ingresos:\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  }, \"Egresos:\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }, \"Balance:\"))) : __jsx(React.Fragment, null));\n};\n\nexport default Index;\n\n__jsx(\"div\", {\n  className: \"row\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }\n}, operaciones.map(operacion => __jsx(\"div\", {\n  key: operacion._id,\n  className: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 17\n  }\n}, \" \", __jsx(Operacion, {\n  operacion: operacion,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 56\n  }\n}))));","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/index.js"],"names":["React","useContext","useEffect","Layout","authContext","useRouter","Index","router","AuthContext","usuario","usuarioAutenticado","operacionesContext","operacionContext","operaciones","mensaje","obtenerOperaciones","token","localStorage","getItem","push","length","nombre","map","operacion","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB;AACA,QAAMC,MAAM,GAAGF,SAAS,EAAxB,CAHgB,CAKhB;;AACA,QAAMG,WAAW,GAAGP,UAAU,CAAEG,WAAF,CAA9B;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAkCF,WAAxC,CAPgB,CAShB;;AACA,QAAMG,kBAAkB,GAAGV,UAAU,CAACW,gBAAD,CAArC;AACA,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAA+CJ,kBAArD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAGF,KAAH,EAAU;AACRN,MAAAA,kBAAkB;AACnB,KAFD,MAEO;AACLH,MAAAA,MAAM,CAACY,IAAP,CAAY,QAAZ;AACD;AAEF,GATQ,EASN,EATM,CAAT,CAbgB,CAwBZ;;AACA,MAAGN,WAAW,CAACO,MAAZ,KAAuB,CAA1B,EAA6B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AAGjC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQX,OAAO,GACL,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,8DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCA,OAAO,CAACY,MAA1C,CAFJ,CADA,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ,CADK,GAaH,2BAfZ,CADJ;AAwBH,CApDD;;AAsDA,eAAef,KAAf;;AAIQ;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKO,WAAW,CAACS,GAAZ,CAAgBC,SAAS,IACtB;AAAK,EAAA,GAAG,EAAEA,SAAS,CAACC,GAApB;AAAyB,EAAA,SAAS,EAAC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAuC,MAAC,SAAD;AAAW,EAAA,SAAS,EAAED,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvC,CADH,CADL","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport authContext from '../context/auth/authContext';\nimport { useRouter } from 'next/router';\n\nconst Index = () => {\n\n    // routing \n    const router = useRouter();\n\n    // Extraer el Usuario autenticado del Storage \n    const AuthContext = useContext( authContext );\n    const { usuario, usuarioAutenticadoÂ } = AuthContext;\n\n    // extraer operaciones de state inicial\n    const operacionesContext = useContext(operacionContext);\n    const { operaciones, mensaje, obtenerOperaciones } = operacionesContext;\n\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n\n      if(token) {\n        usuarioAutenticado()\n      } else {\n        router.push('/login');\n      }\n    \n    }, []);\n\n        // revisar si operaciones tiene contenido\n        if(operaciones.length === 0) return <p>No hay operaciones</p>;\n\n\n    return ( \n        <div>\n            {\n                usuario ? (\n                  <Layout>\n                      <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\n                      <h3 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\"\n                      >Balance de operaciones de\n                          <span className=\"text-blue-500\"> {usuario.nombre}</span>\n                      </h3> \n                          <p>Ingresos:</p>\n                          <p>Egresos:</p>\n                          <p>Balance:</p>\n                      </div>\n                  </Layout>\n                ) : (\n                    <>\n                        \n                    </>\n                )\n            }\n\n        </div>\n  );\n}\n \nexport default Index;\n\n    \n\n        <div className=\"row\">\n            {operaciones.map(operacion => \n                <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\n            )}\n        </div>"]},"metadata":{},"sourceType":"module"}