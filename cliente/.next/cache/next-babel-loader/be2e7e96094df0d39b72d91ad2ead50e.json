{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\listado.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Alerta from '../components/Alerta';\nimport authContext from '../context/auth/authContext';\nimport Link from 'next/link';\n\nvar Listado = function Listado() {\n  _s();\n\n  // Extraer el Usuario autenticado del Storage \n  var AuthContext = useContext(authContext);\n  var usuario = AuthContext.usuario,\n      usuarioAutenticado = AuthContext.usuarioAutenticado; // extraer operaciones de state inicial\n\n  var operacionesContext = useContext(operacionContext);\n  var operaciones = operacionesContext.operaciones,\n      mensaje = operacionesContext.mensaje,\n      obtenerOperaciones = operacionesContext.obtenerOperaciones;\n  useEffect(function () {\n    var token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    }\n  }, []); // revisar si operaciones tiene contenido\n\n  if (operaciones.length === 0) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 39\n    }\n  }, \"No hay operaciones\");\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Listado de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \" \", usuario.nombre)), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, operaciones.map(function (operacion) {\n    return __jsx(\"div\", {\n      key: operacion._id,\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, \" \", __jsx(Operacion, {\n      operacion: operacion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 58\n      }\n    }));\n  }))));\n};\n\n_s(Listado, \"Im7H032EhHH82oPgr+fvwtCgdvU=\");\n\n_c = Listado;\nexport default Listado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listado\");","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/listado.js"],"names":["React","useContext","useEffect","Layout","Alerta","authContext","Link","Listado","AuthContext","usuario","usuarioAutenticado","operacionesContext","operacionContext","operaciones","mensaje","obtenerOperaciones","token","localStorage","getItem","length","nombre","map","operacion","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAEpB;AACA,MAAMC,WAAW,GAAGP,UAAU,CAAEI,WAAF,CAA9B;AAHoB,MAIZI,OAJY,GAIoBD,WAJpB,CAIZC,OAJY;AAAA,MAIHC,kBAJG,GAIoBF,WAJpB,CAIHE,kBAJG,EAMpB;;AACA,MAAMC,kBAAkB,GAAGV,UAAU,CAACW,gBAAD,CAArC;AAPoB,MAQZC,WARY,GAQiCF,kBARjC,CAQZE,WARY;AAAA,MAQCC,OARD,GAQiCH,kBARjC,CAQCG,OARD;AAAA,MAQUC,kBARV,GAQiCJ,kBARjC,CAQUI,kBARV;AAUpBb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAGF,KAAH,EAAU;AACRN,MAAAA,kBAAkB;AACnB;AAEF,GAPQ,EAON,EAPM,CAAT,CAVoB,CAmBpB;;AACA,MAAGG,WAAW,CAACM,MAAZ,KAAuB,CAA1B,EAA6B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AAE7B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,8DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCV,OAAO,CAACW,MAA1C,CAFJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,CAACQ,GAAZ,CAAgB,UAAAC,SAAS;AAAA,WACtB;AAAK,MAAA,GAAG,EAAEA,SAAS,CAACC,GAApB;AAAyB,MAAA,SAAS,EAAC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuC,MAAC,SAAD;AAAW,MAAA,SAAS,EAAED,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,CADsB;AAAA,GAAzB,CADH,CANJ,CADJ,CADF;AAkBD,CAxCD;;GAAMf,O;;KAAAA,O;AA0CN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport Alerta from '../components/Alerta';\r\nimport authContext from '../context/auth/authContext';\r\nimport Link from 'next/link';\r\n\r\nconst Listado = () => {\r\n\r\n  // Extraer el Usuario autenticado del Storage \r\n  const AuthContext = useContext( authContext );\r\n  const { usuario, usuarioAutenticadoÂ } = AuthContext;\r\n  \r\n  // extraer operaciones de state inicial\r\n  const operacionesContext = useContext(operacionContext);\r\n  const { operaciones, mensaje, obtenerOperaciones } = operacionesContext;\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if(token) {\r\n      usuarioAutenticado()\r\n    }\r\n   \r\n  }, []);\r\n\r\n  // revisar si operaciones tiene contenido\r\n  if(operaciones.length === 0) return <p>No hay operaciones</p>;\r\n\r\n  return ( \r\n    <Layout>\r\n        <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\r\n            <h3 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\"\r\n            >Listado de operaciones de\r\n                <span className=\"text-blue-500\"> {usuario.nombre}</span>\r\n            </h3> \r\n               \r\n            <div className=\"row\">\r\n              {operaciones.map(operacion => \r\n                  <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\r\n              )}\r\n            </div>\r\n        \r\n        </div>\r\n\r\n    </Layout>\r\n   );\r\n}\r\n \r\nexport default Listado;"]},"metadata":{},"sourceType":"module"}