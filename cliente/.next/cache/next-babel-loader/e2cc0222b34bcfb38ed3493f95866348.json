{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { OBTENER_OPERACIONES, AGREGAR_OPERACION, OPERACION_EXITOSA, OCULTAR_ALERTA, OPERACION_ERROR, OPERACION_ACTUAL, ELIMINAR_OPERACION, ACTUALIZAR_OPERACION, CALCULAR_BALANCE, OPERACIONES_CATEGORIAS, TOTAL_INGRESOS, TOTAL_EGRESOS } from '../../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case OBTENER_OPERACIONES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        operaciones: action.payload\n      });\n\n    case AGREGAR_OPERACION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        operaciones: [...state.operaciones, action.payload],\n        formulario: false,\n        errorformulario: false\n      });\n\n    case OPERACION_ACTUAL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        operacion: state.operaciones.filter(operacion => operacion._id === action.payload)\n      });\n\n    case ACTUALIZAR_OPERACION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        operaciones: state.operaciones.map(operacion => operacion._id === action.payload._id ? action.payload : operacion)\n      });\n\n    case ELIMINAR_OPERACION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        operaciones: state.operaciones.filter(operacion => operacion._id !== action.payload),\n        operacion: null,\n        alerta: action.payload\n      });\n\n    case OCULTAR_ALERTA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mensaje: {}\n      });\n\n    case OPERACION_EXITOSA:\n    case OPERACION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mensaje: action.payload\n      });\n\n    case OPERACIONES_CATEGORIAS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        operaciones: state.operaciones.filter(operacion => operacion.categoria === action.payload)\n      });\n\n    case TOTAL_INGRESOS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        ingresos: state.operaciones.reduce((monto, operacion) => {\n          if (typeof monto !== 'number') {\n            monto = monto.monto;\n          }\n\n          if (operacion.tipo === 'Ingreso') monto += operacion.monto;\n          return monto;\n        }, 0)\n      });\n\n    case TOTAL_EGRESOS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        egresos: state.operaciones.reduce((monto, operacion) => {\n          if (typeof monto !== 'number') {\n            monto = monto.monto;\n          }\n\n          if (operacion.tipo === 'Egreso') monto += operacion.monto;\n          return monto;\n        }, 0)\n      });\n\n    case CALCULAR_BALANCE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        balance: state.operaciones.reduce((monto, operacion) => {\n          if (typeof monto !== 'number') {\n            monto = monto.monto;\n          }\n\n          if (operacion.tipo === 'Ingreso') monto += operacion.monto;\n          if (operacion.tipo === 'Egreso') monto -= operacion.monto;\n          return monto;\n        }, 0)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Joan/Desktop/ProgramaciÃ³n/Proyectos/AlkemyReactChallenge/cliente/context/operaciones/operacionReducer.js"],"names":["OBTENER_OPERACIONES","AGREGAR_OPERACION","OPERACION_EXITOSA","OCULTAR_ALERTA","OPERACION_ERROR","OPERACION_ACTUAL","ELIMINAR_OPERACION","ACTUALIZAR_OPERACION","CALCULAR_BALANCE","OPERACIONES_CATEGORIAS","TOTAL_INGRESOS","TOTAL_EGRESOS","state","action","type","operaciones","payload","formulario","errorformulario","operacion","filter","_id","map","alerta","mensaje","categoria","ingresos","reduce","monto","tipo","egresos","balance"],"mappings":"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","sourcesContent":["import {\r\n    OBTENER_OPERACIONES,\r\n    AGREGAR_OPERACION,\r\n    OPERACION_EXITOSA,\r\n    OCULTAR_ALERTA,\r\n    OPERACION_ERROR,\r\n    OPERACION_ACTUAL,\r\n    ELIMINAR_OPERACION,\r\n    ACTUALIZAR_OPERACION,\r\n    CALCULAR_BALANCE,\r\n    OPERACIONES_CATEGORIAS,\r\n    TOTAL_INGRESOS,\r\n    TOTAL_EGRESOS\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case OBTENER_OPERACIONES:\r\n            return {\r\n                ...state,\r\n                operaciones: action.payload\r\n            }\r\n        case AGREGAR_OPERACION:\r\n            return {\r\n                ...state,\r\n                operaciones: [...state.operaciones, action.payload],\r\n                formulario: false,\r\n                errorformulario: false\r\n            }\r\n        case OPERACION_ACTUAL:\r\n            return {\r\n                ...state,\r\n                operacion: state.operaciones.filter(operacion => operacion._id ===\r\n                action.payload)\r\n            }\r\n        case ACTUALIZAR_OPERACION:\r\n            return {\r\n                ...state,\r\n                operaciones: state.operaciones.map(operacion => operacion._id === action.payload._id\r\n                ? action.payload : operacion)\r\n            }\r\n        case ELIMINAR_OPERACION:\r\n            return {\r\n                ...state,\r\n                operaciones: state.operaciones.filter(operacion => operacion._id !==\r\n                action.payload),\r\n                operacion: null,\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return {\r\n                ...state,\r\n                mensaje: {}\r\n            } \r\n        case OPERACION_EXITOSA:\r\n        case OPERACION_ERROR:\r\n            return {\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        case OPERACIONES_CATEGORIAS:\r\n            return {\r\n                ...state,\r\n                operaciones: state.operaciones.filter(operacion => operacion.categoria ===\r\n                action.payload)\r\n            }\r\n        case TOTAL_INGRESOS:\r\n            return {\r\n                ...state,\r\n                ingresos: state.operaciones.reduce( (monto, operacion) => {\r\n                    if (typeof monto !== 'number') {\r\n                        monto = monto.monto;\r\n                    }\r\n                    if (operacion.tipo === 'Ingreso') monto += operacion.monto;\r\n                    return monto;\r\n                }, 0)\r\n            }\r\n        case TOTAL_EGRESOS:\r\n            return {\r\n                ...state,\r\n                egresos: state.operaciones.reduce( (monto, operacion) => {\r\n                    if (typeof monto !== 'number') {\r\n                        monto = monto.monto;\r\n                    }\r\n                    if (operacion.tipo === 'Egreso') monto += operacion.monto;\r\n                    return monto;\r\n                }, 0)\r\n            }\r\n        case CALCULAR_BALANCE:\r\n            return {\r\n                ...state,\r\n                balance: state.operaciones.reduce( (monto, operacion) => {\r\n                    if (typeof monto !== 'number') {\r\n                        monto = monto.monto;\r\n                    }\r\n                    if (operacion.tipo === 'Ingreso') monto += operacion.monto;\r\n                    if (operacion.tipo === 'Egreso') monto -= operacion.monto;\r\n                    return monto;\r\n                }, 0)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}