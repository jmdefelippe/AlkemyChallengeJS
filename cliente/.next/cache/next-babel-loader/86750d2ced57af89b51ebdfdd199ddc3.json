{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\listado.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport Alerta from '../components/Alerta';\nimport Layout from '../components/Layout';\nimport Operacion from '../components/Operacion';\nimport alertaContext from '../context/alertas/alertaContext';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\n\nvar Listado = function Listado() {\n  _s();\n\n  // routing \n  var router = useRouter(); // Extraer el Usuario autenticado del Storage \n\n  var AuthContext = useContext(authContext);\n  var usuario = AuthContext.usuario,\n      usuarioAutenticado = AuthContext.usuarioAutenticado;\n  usuario = usuario || {}; // extraer operaciones de state inicial\n\n  var operacionesContext = useContext(operacionContext);\n  var operaciones = operacionesContext.operaciones,\n      mensaje = operacionesContext.mensaje,\n      obtenerOperaciones = operacionesContext.obtenerOperaciones,\n      obtenerOperacionesCategorias = operacionesContext.obtenerOperacionesCategorias;\n  var alertasContext = useContext(alertaContext);\n  var alerta = alertasContext.alerta,\n      mostrarAlerta = alertasContext.mostrarAlerta; //const [ordenarFecha, setOrdenarFecha] = useState(true);\n\n  useEffect(function () {\n    var token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    } // si hay un error\n\n\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n\n    obtenerOperaciones(); // eslint-disable-next-line\n  }, [mensaje]);\n\n  var ordenarPorFecha = function ordenarPorFecha() {\n    obtenerOperaciones();\n  };\n\n  var ordenarPorCategoria = function ordenarPorCategoria(categoria) {\n    obtenerOperacionesCategorias(categoria);\n  }; // Formulario y validación con formik y Yup\n\n\n  var formik = useFormik({\n    initialValues: {\n      orden: '',\n      categoria: ''\n    },\n    onSubmit: function onSubmit(valores) {}\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-5/5 mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Listado de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \" \", usuario.nombre)), __jsx(\"div\", {\n    className: \"flex gap-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"orden\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \"Ordenar por:\"), __jsx(\"select\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"orden\",\n    value: formik.values.orden,\n    onChange: function onChange(e) {\n      formik.handleChange(e);\n      ordenarPorFecha();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, __jsx(\"option\", {\n    value: \"Fecha\",\n    defaultValue: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 35\n    }\n  }, \"Fecha\"), __jsx(\"option\", {\n    value: \"Categor\\xEDa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 35\n    }\n  }, \"Categor\\xEDa\")), formik.touched.orden && formik.errors.orden ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 31\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 35\n    }\n  }, formik.errors.orden, \" \")) : null), formik.values.orden === 'Categoría' ? __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"categoria\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, \"Categoria\"), __jsx(\"select\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"categoria\",\n    placeholder: \"Categoria\",\n    value: formik.values.categoria,\n    onChange: function onChange(e) {\n      formik.handleChange(e);\n      ordenarPorCategoria(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    defaultValue: true,\n    disabled: true,\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 39\n    }\n  }, \"Categor\\xEDa\"), __jsx(\"option\", {\n    value: \"Alimentos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 39\n    }\n  }, \"Alimentos\"), __jsx(\"option\", {\n    value: \"Art\\xEDculos de limpieza\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 39\n    }\n  }, \"Art\\xEDculos de limpieza\"), __jsx(\"option\", {\n    value: \"Impuestos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 39\n    }\n  }, \"Impuestos\"), __jsx(\"option\", {\n    value: \"Donaci\\xF3n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 39\n    }\n  }, \"Donaci\\xF3n\"), __jsx(\"option\", {\n    value: \"Sueldo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 39\n    }\n  }, \"Sueldo\")), formik.touched.categoria && formik.errors.categoria ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 35\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 39\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 39\n    }\n  }, formik.errors.categoria, \" \")) : null) : null), operaciones.length === 0 ? __jsx(\"p\", {\n    className: \"text-2xl font-sans font-bold text-blue-500 text-center my-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 26\n    }\n  }, \"No hay operaciones\") : __jsx(\"div\", {\n    className: \"bg-gray-300 rounded-lg px-5 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, operaciones.map(function (operacion) {\n    return __jsx(\"div\", {\n      key: operacion._id,\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 35\n      }\n    }, \" \", __jsx(Operacion, {\n      operacion: operacion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 74\n      }\n    }));\n  }))));\n};\n\n_s(Listado, \"dz7bomAtkryvNH+LsnFt7WCIHcU=\", false, function () {\n  return [useRouter, useFormik];\n});\n\n_c = Listado;\nexport default Listado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listado\");","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/listado.js"],"names":["React","useContext","useEffect","useRouter","useFormik","Alerta","Layout","Operacion","alertaContext","authContext","operacionContext","Listado","router","AuthContext","usuario","usuarioAutenticado","operacionesContext","operaciones","mensaje","obtenerOperaciones","obtenerOperacionesCategorias","alertasContext","alerta","mostrarAlerta","token","localStorage","getItem","push","msg","categoria","ordenarPorFecha","ordenarPorCategoria","formik","initialValues","orden","onSubmit","valores","nombre","values","e","handleChange","touched","errors","target","value","length","map","operacion","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useFormik } from 'formik';\r\n\r\nimport Alerta from '../components/Alerta';\r\nimport Layout from '../components/Layout';\r\nimport Operacion from '../components/Operacion';\r\n\r\nimport alertaContext from '../context/alertas/alertaContext';\r\nimport authContext from '../context/auth/authContext';\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\n\r\nconst Listado = () => {\r\n  \r\n  // routing \r\n  const router = useRouter();\r\n\r\n  // Extraer el Usuario autenticado del Storage \r\n  const AuthContext = useContext( authContext );\r\n  let { usuario, usuarioAutenticado } = AuthContext;\r\n\r\n  usuario = usuario || {};\r\n  \r\n  // extraer operaciones de state inicial\r\n  const operacionesContext = useContext(operacionContext);\r\n  const { operaciones, mensaje, obtenerOperaciones, obtenerOperacionesCategorias } = operacionesContext;\r\n\r\n  const alertasContext = useContext(alertaContext);\r\n  const { alerta, mostrarAlerta } = alertasContext;\r\n\r\n  //const [ordenarFecha, setOrdenarFecha] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if(token) {\r\n      usuarioAutenticado()\r\n    } else {\r\n      router.push('/login');\r\n    }\r\n\r\n    // si hay un error\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n\r\n    obtenerOperaciones();\r\n    // eslint-disable-next-line\r\n\r\n  }, [mensaje]);\r\n \r\n  const ordenarPorFecha = () => {\r\n    obtenerOperaciones();\r\n  }\r\n\r\n  const ordenarPorCategoria = categoria => {\r\n      obtenerOperacionesCategorias(categoria);\r\n  }\r\n\r\n  // Formulario y validación con formik y Yup\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      orden: '',\r\n      categoria: ''\r\n    },\r\n    onSubmit: valores => {\r\n    }\r\n  });\r\n  \r\n  return ( \r\n    <Layout>\r\n        \r\n        <div className=\"md:w-4/5 xl:w-5/5 mx-auto\">\r\n\r\n            <h3 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\"\r\n            >Listado de operaciones de\r\n                <span className=\"text-blue-500\"> {usuario.nombre}</span>\r\n            </h3>\r\n\r\n            \r\n                    <div className=\"flex gap-10\">\r\n                        \r\n                        <div className=\"mb-4\">\r\n                            <label \r\n                              className=\"block text-black text-sm font-bold mb-2\"\r\n                              htmlFor=\"orden\"\r\n                            >Ordenar por:</label>\r\n                            <select\r\n                                type=\"text\"\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                id=\"orden\"\r\n                                value={formik.values.orden}\r\n                                onChange={e => {  formik.handleChange(e); ordenarPorFecha() }}\r\n                            >\r\n                                  <option value=\"Fecha\" defaultValue>Fecha</option>\r\n                                  <option value=\"Categoría\">Categoría</option>\r\n                            </select>\r\n\r\n                            { formik.touched.orden && formik.errors.orden ? (\r\n                              <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p>{formik.errors.orden} </p>\r\n                              </div>\r\n                            ) : null }\r\n                        </div>\r\n\r\n                        { (formik.values.orden === 'Categoría') ? (\r\n\r\n                            <div className=\"mb-4\">\r\n                                <label \r\n                                  className=\"block text-black text-sm font-bold mb-2\"\r\n                                  htmlFor=\"categoria\"\r\n                                >Categoria</label>\r\n                                <select\r\n                                    type=\"text\"\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"categoria\"\r\n                                    placeholder=\"Categoria\"\r\n                                    value={formik.values.categoria}\r\n                                    onChange={e => {  formik.handleChange(e); ordenarPorCategoria(e.target.value) }}\r\n                                >\r\n                                      <option value=\"\" defaultValue disabled hidden>Categoría</option>\r\n                                      <option value=\"Alimentos\">Alimentos</option>\r\n                                      <option value=\"Artículos de limpieza\">Artículos de limpieza</option>\r\n                                      <option value=\"Impuestos\">Impuestos</option>\r\n                                      <option value=\"Donación\">Donación</option>\r\n                                      <option value=\"Sueldo\">Sueldo</option>\r\n                                </select>\r\n\r\n                                { formik.touched.categoria && formik.errors.categoria ? (\r\n                                  <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                      <p className=\"font-bold\">Error</p>\r\n                                      <p>{formik.errors.categoria} </p>\r\n                                  </div>\r\n                                ) : null }\r\n                            </div>\r\n\r\n                        ) : ( null ) }\r\n\r\n                    </div>\r\n\r\n\r\n                    { (operaciones.length === 0) ?\r\n                        (<p className=\"text-2xl font-sans font-bold text-blue-500 text-center my-4\">No hay operaciones</p>\r\n                        ) : (  \r\n\r\n                            <div className=\"bg-gray-300 rounded-lg px-5 py-2\">\r\n                              {operaciones.map(operacion => \r\n                                  <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\r\n                              )}\r\n                            </div>\r\n                \r\n                \r\n                \r\n            )}\r\n        \r\n        </div>\r\n\r\n    </Layout>\r\n   );\r\n}\r\n \r\nexport default Listado;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}