{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\components\\\\Operacion.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Swal from 'sweetalert2';\nimport operacionContext from '../context/operaciones/operacionContext';\n\nconst Operacion = ({\n  operacion\n}) => {\n  // Next router\n  const router = useRouter(); // obtener la función del context de operaciones\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    mensaje,\n    eliminarOperacion,\n    operacionActual\n  } = operacionesContext;\n  const {\n    _id,\n    concepto,\n    monto,\n    tipo,\n    categoria\n  } = operacion;\n  let {\n    fecha\n  } = operacion;\n  fecha = operacion.fecha.substring(0, 10);\n  useEffect(() => {\n    if (mensaje.categoria === 'alerta-ok') {\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: mensaje.msg,\n        width: 400,\n        timer: 3000,\n        confirmButtonColor: '#60A5FA',\n        confirmButtonText: 'Ok!'\n      });\n    }\n  }, [mensaje]); // funcion que redirige de forma programada\n\n  const seleccionarOperacion = operacion => {\n    operacionActual(operacion);\n    router.push('/editaroperacion');\n  }; // confirmar si desea eliminarlo\n\n\n  const confirmarEliminarOperacion = id => {\n    // preguntar al usuario\n    Swal.fire({\n      title: 'Estás seguro?',\n      text: \"Una operación que se elimina no se puede recuperar\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#60A5FA',\n      cancelButtonColor: '#000000',\n      confirmButtonText: 'Sí, eliminar!',\n      cancelButtonText: 'Cancelar',\n      width: 400,\n      showClass: {\n        popup: 'animate__animated animate__fadeInDown'\n      },\n      hideClass: {\n        popup: 'animate__animated animate__fadeOutUp'\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        eliminarOperacion(id);\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex flex-wrap my-2 items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"flex-1 font-bold text-blue-500 uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, tipo), __jsx(\"p\", {\n    className: \"flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, categoria), __jsx(\"p\", {\n    className: \"flex-1 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, concepto), __jsx(\"p\", {\n    className: \"flex-1 font-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"$\", monto), __jsx(\"p\", {\n    className: \"flex-1 italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, fecha), __jsx(\"img\", {\n    className: \"w-6 mr-5 cursor-pointer\",\n    src: \"/editar.png\",\n    onClick: () => seleccionarOperacion(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(\"img\", {\n    className: \"w-8 cursor-pointer\",\n    src: \"/eliminar.png\" //onClick={() => eliminar() }\n    ,\n    onClick: () => confirmarEliminarOperacion(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Operacion;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/components/Operacion.js"],"names":["React","useContext","useEffect","useRouter","Swal","operacionContext","Operacion","operacion","router","operacionesContext","mensaje","eliminarOperacion","operacionActual","_id","concepto","monto","tipo","categoria","fecha","substring","fire","position","icon","title","msg","width","timer","confirmButtonColor","confirmButtonText","seleccionarOperacion","push","confirmarEliminarOperacion","id","text","showCancelButton","cancelButtonColor","cancelButtonText","showClass","popup","hideClass","then","result","isConfirmed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,gBAAP,MAA6B,yCAA7B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAEjC;AACA,QAAMC,MAAM,GAAGL,SAAS,EAAxB,CAHiC,CAKjC;;AACA,QAAMM,kBAAkB,GAAGR,UAAU,CAACI,gBAAD,CAArC;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,iBAAX;AAA8BC,IAAAA;AAA9B,MAAmDH,kBAAzD;AAEA,QAAM;AAAEI,IAAAA,GAAF;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA;AAA9B,MAA4CV,SAAlD;AACA,MAAI;AAAEW,IAAAA;AAAF,MAAYX,SAAhB;AAEAW,EAAAA,KAAK,GAAGX,SAAS,CAACW,KAAV,CAAgBC,SAAhB,CAA0B,CAA1B,EAA4B,EAA5B,CAAR;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,OAAO,CAACO,SAAR,KAAsB,WAA1B,EAAuC;AACnCb,MAAAA,IAAI,CAACgB,IAAL,CAAU;AACNC,QAAAA,QAAQ,EAAE,QADJ;AAENC,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,KAAK,EAAEb,OAAO,CAACc,GAHT;AAINC,QAAAA,KAAK,EAAE,GAJD;AAKNC,QAAAA,KAAK,EAAE,IALD;AAMNC,QAAAA,kBAAkB,EAAE,SANd;AAONC,QAAAA,iBAAiB,EAAE;AAPb,OAAV;AASH;AACJ,GAZQ,EAYN,CAAClB,OAAD,CAZM,CAAT,CAdiC,CA4BjC;;AACA,QAAMmB,oBAAoB,GAAGtB,SAAS,IAAI;AACtCK,IAAAA,eAAe,CAACL,SAAD,CAAf;AACAC,IAAAA,MAAM,CAACsB,IAAP,CAAY,kBAAZ;AACH,GAHD,CA7BiC,CAkCjC;;;AACA,QAAMC,0BAA0B,GAAGC,EAAE,IAAI;AACrC;AACA5B,IAAAA,IAAI,CAACgB,IAAL,CAAU;AACNG,MAAAA,KAAK,EAAE,eADD;AAENU,MAAAA,IAAI,EAAE,oDAFA;AAGNX,MAAAA,IAAI,EAAE,SAHA;AAINY,MAAAA,gBAAgB,EAAE,IAJZ;AAKNP,MAAAA,kBAAkB,EAAE,SALd;AAMNQ,MAAAA,iBAAiB,EAAE,SANb;AAONP,MAAAA,iBAAiB,EAAE,eAPb;AAQNQ,MAAAA,gBAAgB,EAAE,UARZ;AASNX,MAAAA,KAAK,EAAE,GATD;AAUNY,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE;AADA,OAVL;AAaNC,MAAAA,SAAS,EAAE;AACPD,QAAAA,KAAK,EAAE;AADA;AAbL,KAAV,EAiBGE,IAjBH,CAiBSC,MAAD,IAAY;AAChB,UAAIA,MAAM,CAACC,WAAX,EAAwB;AACpB/B,QAAAA,iBAAiB,CAACqB,EAAD,CAAjB;AACH;AACJ,KArBD;AAuBH,GAzBD;;AA2BA,SAEI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,0CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyDhB,IAAzD,CADJ,EAEI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,SAAvB,CAFJ,EAGI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,QAAjC,CAHJ,EAII;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCC,KAApC,CAJJ,EAKI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,KAA9B,CALJ,EAOI;AACI,IAAA,SAAS,EAAC,yBADd;AACwC,IAAA,GAAG,EAAC,aAD5C;AAEI,IAAA,OAAO,EAAG,MAAMW,oBAAoB,CAAChB,GAAD,CAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAYI;AACI,IAAA,SAAS,EAAC,oBADd;AACmC,IAAA,GAAG,EAAC,eADvC,CAEI;AAFJ;AAGI,IAAA,OAAO,EAAE,MAAMkB,0BAA0B,CAAClB,GAAD,CAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAFJ;AAuBH,CArFD;;AAuFA,eAAeP,SAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\n\r\nconst Operacion = ({ operacion }) => {\r\n\r\n    // Next router\r\n    const router = useRouter();\r\n\r\n    // obtener la función del context de operaciones\r\n    const operacionesContext = useContext(operacionContext);\r\n    const { mensaje, eliminarOperacion, operacionActual, } = operacionesContext;\r\n\r\n    const { _id, concepto, monto, tipo, categoria } = operacion;\r\n    let { fecha } = operacion;\r\n\r\n    fecha = operacion.fecha.substring(0,10);\r\n    \r\n    useEffect(() => {\r\n        if (mensaje.categoria === 'alerta-ok') {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: mensaje.msg,\r\n                width: 400,\r\n                timer: 3000,\r\n                confirmButtonColor: '#60A5FA',\r\n                confirmButtonText: 'Ok!',\r\n            })\r\n        }\r\n    }, [mensaje]);\r\n\r\n    // funcion que redirige de forma programada\r\n    const seleccionarOperacion = operacion => {\r\n        operacionActual(operacion);\r\n        router.push('/editaroperacion');\r\n    }\r\n\r\n    // confirmar si desea eliminarlo\r\n    const confirmarEliminarOperacion = id => {\r\n        // preguntar al usuario\r\n        Swal.fire({\r\n            title: 'Estás seguro?',\r\n            text: \"Una operación que se elimina no se puede recuperar\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#60A5FA',\r\n            cancelButtonColor: '#000000',\r\n            confirmButtonText: 'Sí, eliminar!',\r\n            cancelButtonText: 'Cancelar',\r\n            width: 400,\r\n            showClass: {\r\n                popup: 'animate__animated animate__fadeInDown'\r\n              },\r\n            hideClass: {\r\n                popup: 'animate__animated animate__fadeOutUp'\r\n            }\r\n\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarOperacion(id);\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"flex flex-wrap my-2 items-center\">\r\n            <p className=\"flex-1 font-bold text-blue-500 uppercase\">{tipo}</p>\r\n            <p className=\"flex-1\">{categoria}</p>\r\n            <p className=\"flex-1 font-bold\">{concepto}</p>\r\n            <p className=\"flex-1 font-normal\">${monto}</p>\r\n            <p className=\"flex-1 italic\">{fecha}</p>\r\n        \r\n            <img \r\n                className=\"w-6 mr-5 cursor-pointer\" src=\"/editar.png\"\r\n                onClick={ () => seleccionarOperacion(_id) }\r\n            />\r\n\r\n            <img \r\n                className=\"w-8 cursor-pointer\" src=\"/eliminar.png\"\r\n                //onClick={() => eliminar() }\r\n                onClick={() => confirmarEliminarOperacion(_id)}\r\n            />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Operacion;"]},"metadata":{},"sourceType":"module"}