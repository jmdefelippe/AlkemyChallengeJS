{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\Programaci\\xF3n\\\\Proyectos\\\\AlkemyReactChallenge\\\\cliente\\\\components\\\\ListadoOperaciones.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Operacion from '../components/Operacion';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext'; // Extraer el Usuario autenticado del Storage \n\nconst AuthContext = useContext(authContext);\nlet {\n  usuario,\n  usuarioAutenticado\n} = AuthContext;\nusuario = usuario || {}; // extraer operaciones de state inicial\n\nconst operacionesContext = useContext(operacionContext);\nconst {\n  operaciones,\n  mensaje,\n  obtenerOperaciones\n} = operacionesContext;\nuseEffect(() => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    usuarioAutenticado();\n  } else {\n    router.push('/login');\n  }\n\n  obtenerOperaciones(); // eslint-disable-next-line\n}, [mensaje]);\n\nconst ListadoOperaciones = () => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, operaciones.length === 0 ? __jsx(\"p\", {\n    className: \"text-2xl font-sans font-bold text-blue-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }\n  }, \"No hay operaciones\") : __jsx(\"div\", {\n    className: \"bg-gray-300 rounded-lg px-5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, operaciones.map(operacion => __jsx(\"div\", {\n    key: operacion._id,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, \" \", __jsx(Operacion, {\n    operacion: operacion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 68\n    }\n  })))));\n};\n\nexport default ListadoOperaciones;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/Programación/Proyectos/AlkemyReactChallenge/cliente/components/ListadoOperaciones.js"],"names":["React","useContext","useEffect","Operacion","authContext","operacionContext","AuthContext","usuario","usuarioAutenticado","operacionesContext","operaciones","mensaje","obtenerOperaciones","token","localStorage","getItem","router","push","ListadoOperaciones","length","map","operacion","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B,C,CAEA;;AACA,MAAMC,WAAW,GAAGL,UAAU,CAAEG,WAAF,CAA9B;AACA,IAAI;AAAEG,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAkCF,WAAtC;AAEAC,OAAO,GAAGA,OAAO,IAAI,EAArB,C,CAEA;;AACA,MAAME,kBAAkB,GAAGR,UAAU,CAACI,gBAAD,CAArC;AACA,MAAM;AAAEK,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,IAA+CH,kBAArD;AAEAP,SAAS,CAAC,MAAM;AACd,QAAMW,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAGF,KAAH,EAAU;AACRL,IAAAA,kBAAkB;AACnB,GAFD,MAEO;AACLQ,IAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ;AACD;;AAEDL,EAAAA,kBAAkB,GATJ,CAUd;AACD,CAXQ,EAWN,CAACD,OAAD,CAXM,CAAT;;AAaA,MAAMO,kBAAkB,GAAG,MAAM;AAC7B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOR,WAAW,CAACS,MAAZ,KAAuB,CAAxB,GACG;AAAG,IAAA,SAAS,EAAC,6DAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAGM;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,WAAW,CAACU,GAAZ,CAAgBC,SAAS,IACtB;AAAK,IAAA,GAAG,EAAEA,SAAS,CAACC,GAApB;AAAyB,IAAA,SAAS,EAAC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuC,MAAC,SAAD;AAAW,IAAA,SAAS,EAAED,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC,CADH,CADL,CAJZ,CADJ;AAcH,CAfD;;AAiBA,eAAeH,kBAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\n\r\nimport Operacion from '../components/Operacion';\r\n\r\nimport authContext from '../context/auth/authContext';\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\n\r\n// Extraer el Usuario autenticado del Storage \r\nconst AuthContext = useContext( authContext );\r\nlet { usuario, usuarioAutenticado } = AuthContext;\r\n\r\nusuario = usuario || {};\r\n\r\n// extraer operaciones de state inicial\r\nconst operacionesContext = useContext(operacionContext);\r\nconst { operaciones, mensaje, obtenerOperaciones } = operacionesContext;\r\n\r\nuseEffect(() => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if(token) {\r\n    usuarioAutenticado()\r\n  } else {\r\n    router.push('/login');\r\n  }\r\n\r\n  obtenerOperaciones();\r\n  // eslint-disable-next-line\r\n}, [mensaje]);\r\n\r\nconst ListadoOperaciones = () => {\r\n    return (\r\n        <div>\r\n            { (operaciones.length === 0) ?\r\n                (<p className=\"text-2xl font-sans font-bold text-blue-500 text-center my-4\">No hay operaciones</p>\r\n                ) : (  \r\n                    <div className=\"bg-gray-300 rounded-lg px-5 py-2\">\r\n                        {operaciones.map(operacion => \r\n                            <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\r\n                        )}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ListadoOperaciones;"]},"metadata":{},"sourceType":"module"}