{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\listado.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport Layout from '../components/Layout';\nimport Alerta from '../components/Alerta';\nimport Operacion from '../components/Operacion';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\nimport alertaContext from '../context/alertas/alertaContext';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\n\nconst Listado = () => {\n  // routing \n  const router = useRouter(); // Extraer el Usuario autenticado del Storage \n\n  const AuthContext = useContext(authContext);\n  const {\n    usuario,\n    usuarioAutenticado\n  } = AuthContext; // extraer operaciones de state inicial\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    operaciones,\n    mensaje,\n    obtenerOperaciones,\n    obtenerOperacionesCategorias\n  } = operacionesContext;\n  const alertasContext = useContext(alertaContext);\n  const {\n    alerta,\n    mostrarAlerta\n  } = alertasContext; //const [ordenarFecha, setOrdenarFecha] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    } // si hay un error\n\n\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n\n    obtenerOperaciones(); // eslint-disable-next-line\n  }, [mensaje]); // revisar si operaciones tiene contenido\n  //if(operaciones.length === 0) return <p>No hay operaciones</p>;\n\n  const ordenarPorFecha = () => {\n    obtenerOperaciones();\n    console.log(\"click en fecha...\");\n  };\n\n  const ordenarPorCategoria = categoria => {\n    obtenerOperacionesCategorias(categoria);\n    console.log(\"click en categoria...\");\n  }; // Formulario y validaciÃ³n con formik y Yup\n\n\n  const formik = useFormik({\n    initialValues: {\n      orden: '',\n      categoria: ''\n    },\n    onSubmit: valores => {}\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-5/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Listado de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \" \", usuario.nombre)), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"orden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }, \"Ordenar por:\"), __jsx(\"select\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"orden\",\n    value: formik.values.orden,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 27\n    }\n  }, __jsx(\"option\", {\n    value: \"Fecha\",\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"Fecha\"), __jsx(\"option\", {\n    value: \"Categoria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"Categoria\")), formik.touched.orden && formik.errors.orden ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, formik.errors.orden, \" \")) : null), __jsx(\"div\", {\n    className: \"bg-gray-300 rounded-lg px-5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, operaciones.map(operacion => __jsx(\"div\", {\n    key: operacion._id,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \" \", __jsx(Operacion, {\n    operacion: operacion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 58\n    }\n  }))))));\n};\n\nexport default Listado;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/listado.js"],"names":["React","useContext","useEffect","useState","Layout","Alerta","Operacion","authContext","operacionContext","alertaContext","Link","useRouter","useFormik","Listado","router","AuthContext","usuario","usuarioAutenticado","operacionesContext","operaciones","mensaje","obtenerOperaciones","obtenerOperacionesCategorias","alertasContext","alerta","mostrarAlerta","token","localStorage","getItem","push","msg","categoria","ordenarPorFecha","console","log","ordenarPorCategoria","formik","initialValues","orden","onSubmit","valores","nombre","values","handleChange","touched","errors","map","operacion","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAA0B,QAA1B;;AAGA,MAAMC,OAAO,GAAG,MAAM;AACpB;AACA,QAAMC,MAAM,GAAGH,SAAS,EAAxB,CAFoB,CAIpB;;AACA,QAAMI,WAAW,GAAGd,UAAU,CAAEM,WAAF,CAA9B;AACA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAkCF,WAAxC,CANoB,CAQpB;;AACA,QAAMG,kBAAkB,GAAGjB,UAAU,CAACO,gBAAD,CAArC;AACA,QAAM;AAAEW,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,kBAAxB;AAA4CC,IAAAA;AAA5C,MAA6EJ,kBAAnF;AAEA,QAAMK,cAAc,GAAGtB,UAAU,CAACQ,aAAD,CAAjC;AACA,QAAM;AAAEe,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4BF,cAAlC,CAboB,CAepB;;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAGF,KAAH,EAAU;AACRT,MAAAA,kBAAkB;AACnB,KAFD,MAEO;AACLH,MAAAA,MAAM,CAACe,IAAP,CAAY,QAAZ;AACD,KAPa,CAQd;;;AACA,QAAIT,OAAJ,EAAa;AACXK,MAAAA,aAAa,CAACL,OAAO,CAACU,GAAT,EAAcV,OAAO,CAACW,SAAtB,CAAb;AACD;;AAEDV,IAAAA,kBAAkB,GAbJ,CAcd;AAED,GAhBQ,EAgBN,CAACD,OAAD,CAhBM,CAAT,CAjBoB,CAoCpB;AACA;;AAEA,QAAMY,eAAe,GAAG,MAAM;AAC5BX,IAAAA,kBAAkB;AAClBY,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAHD;;AAKA,QAAMC,mBAAmB,GAAGJ,SAAS,IAAI;AACrCT,IAAAA,4BAA4B,CAACS,SAAD,CAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,GAHD,CA5CoB,CAkDtB;;;AACA,QAAME,MAAM,GAAGxB,SAAS,CAAC;AACvByB,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbP,MAAAA,SAAS,EAAE;AAFE,KADQ;AAKvBQ,IAAAA,QAAQ,EAAEC,OAAO,IAAI,CAEpB;AAPsB,GAAD,CAAxB;AAYE,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAI,IAAA,SAAS,EAAC,8DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCxB,OAAO,CAACyB,MAA1C,CAFJ,CAFJ,EAOI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACc;AACE,IAAA,SAAS,EAAC,yCADZ;AAEE,IAAA,OAAO,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADd,EAKc;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,4HAFd;AAGI,IAAA,EAAE,EAAC,OAHP;AAII,IAAA,KAAK,EAAEL,MAAM,CAACM,MAAP,CAAcJ,KAJzB;AAKI,IAAA,QAAQ,EAAEF,MAAM,CAACO,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOM;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,YAAY,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPN,EAQM;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARN,CALd,EAgBgBP,MAAM,CAACQ,OAAP,CAAeN,KAAf,IAAwBF,MAAM,CAACS,MAAP,CAAcP,KAAtC,GACA;AAAK,IAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAM,CAACS,MAAP,CAAcP,KAAlB,MAFJ,CADA,GAKE,IArBlB,CAPJ,EA6CI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,WAAW,CAAC2B,GAAZ,CAAgBC,SAAS,IACtB;AAAK,IAAA,GAAG,EAAEA,SAAS,CAACC,GAApB;AAAyB,IAAA,SAAS,EAAC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuC,MAAC,SAAD;AAAW,IAAA,SAAS,EAAED,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC,CADH,CADH,CA7CJ,CAHJ,CADF;AA2DD,CA1HD;;AA4HA,eAAelC,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport Alerta from '../components/Alerta';\r\nimport Operacion from '../components/Operacion';\r\nimport authContext from '../context/auth/authContext';\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\nimport alertaContext from '../context/alertas/alertaContext';\r\n\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport { useFormik } from 'formik';\r\n\r\n\r\nconst Listado = () => {\r\n  // routing \r\n  const router = useRouter();\r\n\r\n  // Extraer el Usuario autenticado del Storage \r\n  const AuthContext = useContext( authContext );\r\n  const { usuario, usuarioAutenticadoÂ } = AuthContext;\r\n  \r\n  // extraer operaciones de state inicial\r\n  const operacionesContext = useContext(operacionContext);\r\n  const { operaciones, mensaje, obtenerOperaciones, obtenerOperacionesCategorias } = operacionesContext;\r\n\r\n  const alertasContext = useContext(alertaContext);\r\n  const { alerta, mostrarAlerta } = alertasContext;\r\n\r\n  //const [ordenarFecha, setOrdenarFecha] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if(token) {\r\n      usuarioAutenticado()\r\n    } else {\r\n      router.push('/login');\r\n    }\r\n    // si hay un error\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n\r\n    obtenerOperaciones();\r\n    // eslint-disable-next-line\r\n\r\n  }, [mensaje]);\r\n\r\n\r\n  // revisar si operaciones tiene contenido\r\n  //if(operaciones.length === 0) return <p>No hay operaciones</p>;\r\n\r\n  const ordenarPorFecha = () => {\r\n    obtenerOperaciones();\r\n    console.log(\"click en fecha...\");\r\n  }\r\n\r\n  const ordenarPorCategoria = categoria => {\r\n      obtenerOperacionesCategorias(categoria);\r\n      console.log(\"click en categoria...\");\r\n  }\r\n\r\n\r\n// Formulario y validaciÃ³n con formik y Yup\r\nconst formik = useFormik({\r\n  initialValues: {\r\n    orden: '',\r\n    categoria: ''\r\n  },\r\n  onSubmit: valores => {\r\n\r\n  }\r\n});\r\n\r\n\r\n  \r\n  return ( \r\n    <Layout>\r\n\r\n        \r\n        <div className=\"md:w-4/5 xl:w-5/5 mx-auto\">\r\n\r\n            <h3 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\"\r\n            >Listado de operaciones de\r\n                <span className=\"text-blue-500\"> {usuario.nombre}</span>\r\n            </h3>\r\n\r\n            <div className=\"mb-4\">\r\n                          <label \r\n                            className=\"block text-black text-sm font-bold mb-2\"\r\n                            htmlFor=\"orden\"\r\n                          >Ordenar por:</label>\r\n                          <select\r\n                              type=\"text\"\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"orden\"\r\n                              value={formik.values.orden}\r\n                              onChange={formik.handleChange}\r\n                          >\r\n                                <option value=\"Fecha\" defaultValue>Fecha</option>\r\n                                <option value=\"Categoria\">Categoria</option>\r\n                          </select>\r\n\r\n                          { formik.touched.orden && formik.errors.orden ? (\r\n                            <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                <p className=\"font-bold\">Error</p>\r\n                                <p>{formik.errors.orden} </p>\r\n                            </div>\r\n                          ) : null }\r\n                      </div>\r\n\r\n\r\n\r\n{/*\r\n            <div className=\"flex justify-center mb-4\">\r\n                <button className=\"border rounded-lg hover:bg-black bg-blue-400 px-5 py-3 mr-5 text-white font-bold uppercase\"\r\n                    onClick={() => ordenarPorFecha() }\r\n                >Por fecha</button>\r\n                            \r\n                <button className=\"border rounded-lg hover:bg-black bg-blue-400 px-5 py-3 text-white font-bold uppercase\"\r\n                    onClick={() => ordenarPorCategoria('Impuestos') }\r\n                >Por categorÃ­a</button>\r\n            </div>\r\n*/}\r\n              \r\n            <div className=\"bg-gray-300 rounded-lg px-5 py-2\">\r\n              {operaciones.map(operacion => \r\n                  <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\r\n              )}\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    </Layout>\r\n   );\r\n}\r\n \r\nexport default Listado;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}