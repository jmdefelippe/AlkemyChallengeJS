{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\listado.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Alerta from '../components/Alerta';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst Listado = () => {\n  // routing \n  const router = useRouter(); // extraer operaciones de state inicial\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    operaciones,\n    mensaje,\n    obtenerOperaciones\n  } = operacionesContext;\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    }\n  }, []); // revisar si operaciones tiene contenido\n  //if(operaciones.length === 0) return <p>No hay operaciones</p>;\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, usuario ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Listado de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \" \", usuario.nombre)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, operaciones.map(operacion => __jsx(\"div\", {\n    key: operacion._id,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(Operacion, {\n    operacion: operacion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 66\n    }\n  })))))) : __jsx(React.Fragment, null));\n};\n\nexport default Listado;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/listado.js"],"names":["React","useContext","useEffect","Layout","Alerta","authContext","operacionContext","Link","useRouter","Listado","router","operacionesContext","operaciones","mensaje","obtenerOperaciones","token","localStorage","getItem","usuarioAutenticado","push","usuario","nombre","map","operacion","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB;AACA,QAAMC,MAAM,GAAGF,SAAS,EAAxB,CAFoB,CAIpB;;AACA,QAAMG,kBAAkB,GAAGV,UAAU,CAACK,gBAAD,CAArC;AACA,QAAM;AAAEM,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAA+CH,kBAArD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAGF,KAAH,EAAU;AACRG,MAAAA,kBAAkB;AACnB,KAFD,MAEO;AACLR,MAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ;AACD;AAEF,GATQ,EASN,EATM,CAAT,CARoB,CAoBpB;AACA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,OAAO,GACH,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,8DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCA,OAAO,CAACC,MAA1C,CAFJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,WAAW,CAACU,GAAZ,CAAgBC,SAAS,IACtB;AAAK,IAAA,GAAG,EAAEA,SAAS,CAACC,GAApB;AAAyB,IAAA,SAAS,EAAC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuC,MAAC,SAAD;AAAW,IAAA,SAAS,EAAED,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC,CADH,CADH,CANJ,CADJ,CADG,GAkBH,2BApBR,CADF;AA2BD,CAlDD;;AAoDA,eAAed,OAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport Alerta from '../components/Alerta';\r\nimport authContext from '../context/auth/authContext';\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst Listado = () => {\r\n  // routing \r\n  const router = useRouter();\r\n  \r\n  // extraer operaciones de state inicial\r\n  const operacionesContext = useContext(operacionContext);\r\n  const { operaciones, mensaje, obtenerOperaciones } = operacionesContext;\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if(token) {\r\n      usuarioAutenticado()\r\n    } else {\r\n      router.push('/login');\r\n    }\r\n  \r\n  }, []);\r\n\r\n\r\n  // revisar si operaciones tiene contenido\r\n  //if(operaciones.length === 0) return <p>No hay operaciones</p>;\r\n\r\n  return ( \r\n    <div>\r\n    {\r\n        usuario ? (\r\n            <Layout>\r\n                <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\r\n                    <h3 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\"\r\n                    >Listado de operaciones de\r\n                        <span className=\"text-blue-500\"> {usuario.nombre}</span>\r\n                    </h3> \r\n                      \r\n                    <div>\r\n                      {operaciones.map(operacion => \r\n                          <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\r\n                      )}\r\n                    </div>\r\n                \r\n                </div>\r\n        \r\n            </Layout>\r\n        ) : (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Listado;"]},"metadata":{},"sourceType":"module"}