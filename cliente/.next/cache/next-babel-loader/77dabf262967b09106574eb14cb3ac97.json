{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\listado.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport Alerta from '../components/Alerta';\nimport Layout from '../components/Layout';\nimport Operacion from '../components/Operacion';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\n\nconst Listado = () => {\n  // routing \n  const router = useRouter(); // Extraer el Usuario autenticado del Storage \n\n  const AuthContext = useContext(authContext);\n  let {\n    usuario,\n    usuarioAutenticado\n  } = AuthContext;\n  usuario = usuario || {}; // extraer operaciones de state inicial\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    operaciones,\n    mensaje,\n    obtenerOperaciones,\n    obtenerOperacionesCategorias\n  } = operacionesContext;\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    }\n\n    obtenerOperaciones(); // eslint-disable-next-line\n  }, [mensaje]);\n\n  const ordenarPorFecha = () => {\n    obtenerOperaciones();\n  };\n\n  const ordenarPorCategoria = categoria => {\n    obtenerOperacionesCategorias(categoria);\n  }; // Formulario y validación con formik y Yup\n\n\n  const formik = useFormik({\n    initialValues: {\n      orden: '',\n      categoria: ''\n    },\n    onSubmit: valores => {}\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-5/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Listado de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \" \", usuario.nombre)), mensaje.categoria === 'alerta-error' && __jsx(Alerta, {\n    msg: mensaje.msg,\n    categoria: mensaje.categoria,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 57\n    }\n  }), __jsx(\"div\", {\n    className: \"flex gap-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4 lg:ml-0 md:ml-0 sm:ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"orden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Ordenar por:\"), __jsx(\"select\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"orden\",\n    value: formik.values.orden,\n    onChange: e => {\n      formik.handleChange(e);\n      ordenarPorFecha();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    value: \"Fecha\",\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }\n  }, \"Fecha\"), __jsx(\"option\", {\n    value: \"Categor\\xEDa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }\n  }, \"Categor\\xEDa\")), formik.touched.orden && formik.errors.orden ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }\n  }, formik.errors.orden, \" \")) : null), formik.values.orden === 'Categoría' ? __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-black text-sm font-bold mb-2\",\n    htmlFor: \"categoria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Categoria\"), __jsx(\"select\", {\n    type: \"text\",\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"categoria\",\n    placeholder: \"Categoria\",\n    value: formik.values.categoria,\n    onChange: e => {\n      formik.handleChange(e);\n      ordenarPorCategoria(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    defaultValue: true,\n    disabled: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 31\n    }\n  }, \"Categor\\xEDa\"), __jsx(\"option\", {\n    value: \"Alimentos y bebidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }\n  }, \"Alimentos y bebidas\"), __jsx(\"option\", {\n    value: \"Art\\xEDculos de limpieza\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }\n  }, \"Art\\xEDculos de limpieza\"), __jsx(\"option\", {\n    value: \"Esparcimiento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 31\n    }\n  }, \"Esparcimiento\"), __jsx(\"option\", {\n    value: \"Regalo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 31\n    }\n  }, \"Regalo\"), __jsx(\"option\", {\n    value: \"Servicios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }\n  }, \"Servicios\"), __jsx(\"option\", {\n    value: \"Sueldo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }, \"Sueldo\"), __jsx(\"option\", {\n    value: \"Perfumer\\xEDa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  }, \"Perfumer\\xEDa\"), __jsx(\"option\", {\n    value: \"Pr\\xE9stamo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 31\n    }\n  }, \"Pr\\xE9stamo\"), __jsx(\"option\", {\n    value: \"Transporte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 31\n    }\n  }, \"Transporte\"), __jsx(\"option\", {\n    value: \"Vestimenta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 31\n    }\n  }, \"Vestimenta\")), formik.touched.categoria && formik.errors.categoria ? __jsx(\"div\", {\n    className: \"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 31\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 31\n    }\n  }, formik.errors.categoria, \" \")) : null) : null), operaciones.length === 0 ? __jsx(\"p\", {\n    className: \"text-2xl font-sans font-bold text-blue-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 18\n    }\n  }, \"No hay operaciones\") : __jsx(\"div\", {\n    className: \"bg-gray-300 rounded-lg px-5 py-2 md:w-5/5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, operaciones.map(operacion => __jsx(\"div\", {\n    key: operacion._id,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 27\n    }\n  }, \" \", __jsx(Operacion, {\n    operacion: operacion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 66\n    }\n  }))))));\n};\n\nexport default Listado;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/listado.js"],"names":["React","useContext","useEffect","useRouter","useFormik","Alerta","Layout","Operacion","authContext","operacionContext","Listado","router","AuthContext","usuario","usuarioAutenticado","operacionesContext","operaciones","mensaje","obtenerOperaciones","obtenerOperacionesCategorias","token","localStorage","getItem","push","ordenarPorFecha","ordenarPorCategoria","categoria","formik","initialValues","orden","onSubmit","valores","nombre","msg","values","e","handleChange","touched","errors","target","value","length","map","operacion","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useFormik } from 'formik';\r\n\r\nimport Alerta from '../components/Alerta';\r\nimport Layout from '../components/Layout';\r\nimport Operacion from '../components/Operacion';\r\n\r\nimport authContext from '../context/auth/authContext';\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\n\r\nconst Listado = () => {\r\n  \r\n  // routing \r\n  const router = useRouter();\r\n\r\n  // Extraer el Usuario autenticado del Storage \r\n  const AuthContext = useContext( authContext );\r\n  let { usuario, usuarioAutenticado } = AuthContext;\r\n\r\n  usuario = usuario || {};\r\n  \r\n  // extraer operaciones de state inicial\r\n  const operacionesContext = useContext(operacionContext);\r\n  const { operaciones, mensaje, obtenerOperaciones, obtenerOperacionesCategorias } = operacionesContext;\r\n \r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if(token) {\r\n      usuarioAutenticado()\r\n    } else {\r\n      router.push('/login');\r\n    }\r\n\r\n    obtenerOperaciones();\r\n    // eslint-disable-next-line\r\n  }, [mensaje]);\r\n \r\n  const ordenarPorFecha = () => {\r\n    obtenerOperaciones();\r\n  }\r\n\r\n  const ordenarPorCategoria = categoria => {\r\n      obtenerOperacionesCategorias(categoria);\r\n  }\r\n\r\n  // Formulario y validación con formik y Yup\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      orden: '',\r\n      categoria: ''\r\n    },\r\n    onSubmit: valores => {\r\n    }\r\n  });\r\n  \r\n  return ( \r\n    <Layout>\r\n\r\n        <div className=\"md:w-4/5 xl:w-5/5 mx-auto\">\r\n\r\n            <h3 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\"\r\n            >Listado de operaciones de\r\n                <span className=\"text-blue-500\"> {usuario.nombre}</span>\r\n            </h3>\r\n            \r\n            { (mensaje.categoria === 'alerta-error') && <Alerta msg={mensaje.msg} categoria={mensaje.categoria} /> }\r\n\r\n            <div className=\"flex gap-10\">\r\n                \r\n                <div className=\"mb-4 lg:ml-0 md:ml-0 sm:ml-4\">\r\n                    <label \r\n                      className=\"block text-black text-sm font-bold mb-2\"\r\n                      htmlFor=\"orden\"\r\n                    >Ordenar por:</label>\r\n                    <select\r\n                        type=\"text\"\r\n                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        id=\"orden\"\r\n                        value={formik.values.orden}\r\n                        onChange={e => {  formik.handleChange(e); ordenarPorFecha() }}\r\n                    >\r\n                          <option value=\"Fecha\" defaultValue>Fecha</option>\r\n                          <option value=\"Categoría\">Categoría</option>\r\n                    </select>\r\n\r\n                    { formik.touched.orden && formik.errors.orden ? (\r\n                      <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\r\n                          <p className=\"font-bold\">Error</p>\r\n                          <p>{formik.errors.orden} </p>\r\n                      </div>\r\n                    ) : null }\r\n                </div>\r\n\r\n                { (formik.values.orden === 'Categoría') ? (\r\n\r\n                    <div className=\"mb-4\">\r\n                        <label \r\n                          className=\"block text-black text-sm font-bold mb-2\"\r\n                          htmlFor=\"categoria\"\r\n                        >Categoria</label>\r\n                        <select\r\n                            type=\"text\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            id=\"categoria\"\r\n                            placeholder=\"Categoria\"\r\n                            value={formik.values.categoria}\r\n                            onChange={e => {  formik.handleChange(e); ordenarPorCategoria(e.target.value) }}\r\n                        >\r\n                              <option value=\"\" defaultValue disabled hidden>Categoría</option>\r\n                              <option value=\"Alimentos y bebidas\">Alimentos y bebidas</option>\r\n                              <option value=\"Artículos de limpieza\">Artículos de limpieza</option>\r\n                              <option value=\"Esparcimiento\">Esparcimiento</option>\r\n                              <option value=\"Regalo\">Regalo</option>\r\n                              <option value=\"Servicios\">Servicios</option>\r\n                              <option value=\"Sueldo\">Sueldo</option>\r\n                              <option value=\"Perfumería\">Perfumería</option>\r\n                              <option value=\"Préstamo\">Préstamo</option>\r\n                              <option value=\"Transporte\">Transporte</option>\r\n                              <option value=\"Vestimenta\">Vestimenta</option>\r\n\r\n                        </select>\r\n\r\n                        { formik.touched.categoria && formik.errors.categoria ? (\r\n                          <div className=\"my-2 bg-gray-200 border-l-4 border-red-500 text-red-700 p-4\">\r\n                              <p className=\"font-bold\">Error</p>\r\n                              <p>{formik.errors.categoria} </p>\r\n                          </div>\r\n                        ) : null }\r\n                    </div>\r\n\r\n                ) : ( null ) }\r\n\r\n            </div>\r\n\r\n            { (operaciones.length === 0) ?\r\n                (<p className=\"text-2xl font-sans font-bold text-blue-500 text-center my-4\">No hay operaciones</p>\r\n                ) : (  \r\n\r\n                    <div className=\"bg-gray-300 rounded-lg px-5 py-2 md:w-5/5\">\r\n                      {operaciones.map(operacion => \r\n                          <div key={operacion._id} className=\"\"> <Operacion operacion={operacion}/></div>\r\n                      )}\r\n                    </div>\r\n            )}\r\n        \r\n        </div>\r\n\r\n    </Layout>\r\n   );\r\n}\r\n \r\nexport default Listado;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}