{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\components\\\\Operacion.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport operacionContext from '../context/operaciones/operacionContext';\nimport Swal from 'sweetalert2';\nimport { useRouter } from 'next/router';\n\nconst Operacion = ({\n  operacion\n}) => {\n  // Next router\n  const router = useRouter(); // obtener la función del context de operaciones\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    eliminarOperacion,\n    obtenerOperaciones,\n    actualizarOperacion,\n    guardarOperacionActual\n  } = operacionesContext;\n  const {\n    _id,\n    concepto,\n    monto,\n    tipo,\n    categoria\n  } = operacion;\n  let {\n    fecha\n  } = operacion;\n  fecha = operacion.fecha.substring(0, 10); // funcion que redirige de forma programada\n\n  const redireccionarEdicion = operacion => {\n    dispatch(obtenerOperacionEditar(operacion));\n    router.push(`/operaciones/editar/${operacion._id}`);\n  }; // confirmar si desea eliminarlo\n\n\n  const confirmarEliminarOperacion = id => {\n    // preguntar al usuario\n    Swal.fire({\n      title: 'Estás seguro?',\n      text: \"Una operación que se elimina no se puede recuperar\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#60A5FA',\n      cancelButtonColor: '#000000',\n      confirmButtonText: 'Sí, eliminar!',\n      cancelButtonText: 'Cancelar',\n      width: 200,\n      showClass: {\n        popup: 'animate__animated animate__fadeInDown'\n      },\n      hideClass: {\n        popup: 'animate__animated animate__fadeOutUp'\n      }\n    }).then(result => {\n      if (result.isConfirmed) {\n        // pasarlo al action\n        eliminarOperacion(operacion._id);\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex mb-2 items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"flex-1 font-bold text-blue-500 uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, tipo), __jsx(\"p\", {\n    className: \"flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, categoria), __jsx(\"p\", {\n    className: \"flex-1 font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, concepto), __jsx(\"p\", {\n    className: \"flex-1 font-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"$\", monto), __jsx(\"p\", {\n    className: \"flex-1 italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, fecha), __jsx(\"img\", {\n    className: \"w-8 mr-5 cursor-pointer\",\n    src: \"/editar.png\",\n    onClick: () => redireccionarEdicion(operacion),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), __jsx(\"img\", {\n    className: \"w-8 cursor-pointer\",\n    src: \"/eliminar.png\" //onClick={() => eliminar() }\n    ,\n    onClick: () => confirmarEliminarOperacion(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Operacion;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/components/Operacion.js"],"names":["React","useContext","operacionContext","Swal","useRouter","Operacion","operacion","router","operacionesContext","eliminarOperacion","obtenerOperaciones","actualizarOperacion","guardarOperacionActual","_id","concepto","monto","tipo","categoria","fecha","substring","redireccionarEdicion","dispatch","obtenerOperacionEditar","push","confirmarEliminarOperacion","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","width","showClass","popup","hideClass","then","result","isConfirmed"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport operacionContext from '../context/operaciones/operacionContext';\r\nimport Swal from 'sweetalert2';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst Operacion = ({ operacion }) => {\r\n\r\n    // Next router\r\n    const router = useRouter();\r\n\r\n    // obtener la función del context de operaciones\r\n    const operacionesContext = useContext(operacionContext);\r\n    const { eliminarOperacion, obtenerOperaciones, actualizarOperacion, guardarOperacionActual } = operacionesContext;\r\n\r\n    const { _id, concepto, monto, tipo, categoria } = operacion;\r\n    let { fecha } = operacion;\r\n\r\n    fecha = operacion.fecha.substring(0,10);\r\n\r\n    // funcion que redirige de forma programada\r\n    const redireccionarEdicion = operacion => {\r\n        dispatch( obtenerOperacionEditar(operacion) );\r\n        router.push(`/operaciones/editar/${operacion._id}`)\r\n    }\r\n\r\n    // confirmar si desea eliminarlo\r\n    const confirmarEliminarOperacion = id => {\r\n        // preguntar al usuario\r\n        Swal.fire({\r\n            title: 'Estás seguro?',\r\n            text: \"Una operación que se elimina no se puede recuperar\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#60A5FA',\r\n            cancelButtonColor: '#000000',\r\n            confirmButtonText: 'Sí, eliminar!',\r\n            cancelButtonText: 'Cancelar',\r\n            width: 200,\r\n            showClass: {\r\n                popup: 'animate__animated animate__fadeInDown'\r\n              },\r\n            hideClass: {\r\n                popup: 'animate__animated animate__fadeOutUp'\r\n            }\r\n\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                // pasarlo al action\r\n                eliminarOperacion(operacion._id);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex mb-2 items-center\">\r\n            <p className=\"flex-1 font-bold text-blue-500 uppercase\">{tipo}</p>\r\n            <p className=\"flex-1\">{categoria}</p>\r\n            <p className=\"flex-1 font-bold\">{concepto}</p>\r\n            <p className=\"flex-1 font-normal\">${monto}</p>\r\n            <p className=\"flex-1 italic\">{fecha}</p>\r\n        \r\n            <img \r\n                className=\"w-8 mr-5 cursor-pointer\" src=\"/editar.png\"\r\n                onClick={ () => redireccionarEdicion(operacion) }\r\n            />\r\n\r\n            <img \r\n                className=\"w-8 cursor-pointer\" src=\"/eliminar.png\"\r\n                //onClick={() => eliminar() }\r\n                onClick={() => confirmarEliminarOperacion(_id)}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Operacion;"]},"metadata":{},"sourceType":"module"}