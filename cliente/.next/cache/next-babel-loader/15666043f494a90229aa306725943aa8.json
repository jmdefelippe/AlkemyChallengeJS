{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joan\\\\Desktop\\\\AlkemyReactChallenge\\\\cliente\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\n\nconst Index = () => {\n  // routing \n  const router = useRouter(); // Extraer el Usuario autenticado del Storage \n\n  const AuthContext = useContext(authContext);\n  let {\n    usuario,\n    usuarioAutenticado\n  } = AuthContext;\n  usuario = usuario || {};\n  let classBalance = classBalance || []; // extraer operaciones de state inicial\n\n  const operacionesContext = useContext(operacionContext);\n  const {\n    ingresos,\n    egresos,\n    balance,\n    calcularTotales\n  } = operacionesContext;\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      usuarioAutenticado();\n    } else {\n      router.push('/login');\n    }\n\n    calcularTotales(); // eslint-disable-next-line\n  }, []);\n\n  const getClassBalance = classBalance => {\n    if (balance > 0) {\n      classBalance = \"text-green-500\";\n    } else if (balance < 0) {\n      classBalance = \"text-red-700\";\n    } else {\n      classBalance = \"font-normal text-black\";\n    }\n\n    return classBalance;\n  };\n\n  classBalance = getClassBalance(classBalance);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, usuario ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"md:w-4/5 xl:w-3/5 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-3xl font-sans font-bold text-black-500 text-center my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Balance de operaciones de\", __jsx(\"span\", {\n    className: \"text-blue-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \" \", usuario.nombre)), __jsx(\"div\", {\n    className: \"grid md:w-4/5 xl:w-3/5 mx-auto mb-2 items-center bg-gray-300 rounded-lg px-5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, \"Ingresos:\", __jsx(\"span\", {\n    className: \"font-normal text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, \" $\", ingresos, \" \")), __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"Egresos:\", __jsx(\"span\", {\n    className: \"font-normal text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \" $\", egresos, \" \")), __jsx(\"p\", {\n    className: \"font-bold text-blue-500 uppercase text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Balance:\", __jsx(\"span\", {\n    className: classBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \" $\", balance, \" \"))))) : __jsx(React.Fragment, null));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Joan/Desktop/AlkemyReactChallenge/cliente/pages/index.js"],"names":["React","useContext","useEffect","useRouter","Layout","authContext","operacionContext","Index","router","AuthContext","usuario","usuarioAutenticado","classBalance","operacionesContext","ingresos","egresos","balance","calcularTotales","token","localStorage","getItem","push","getClassBalance","nombre"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nimport Layout from '../components/Layout';\n\nimport authContext from '../context/auth/authContext';\nimport operacionContext from '../context/operaciones/operacionContext';\n\n\nconst Index = () => {\n\n    // routing \n    const router = useRouter();\n\n    // Extraer el Usuario autenticado del Storage \n    const AuthContext = useContext( authContext );\n    let { usuario, usuarioAutenticadoÂ } = AuthContext;\n\n    usuario = usuario || {};\n    let classBalance = classBalance || [];\n\n    // extraer operaciones de state inicial\n    const operacionesContext = useContext(operacionContext);\n    const { ingresos, egresos, balance, calcularTotales } = operacionesContext;\n\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n\n      if(token) {\n        usuarioAutenticado();\n      } else {\n        router.push('/login');\n      }\n    \n      calcularTotales();\n      // eslint-disable-next-line\n    }, []);\n\n    const getClassBalance = (classBalance) => {\n      if (balance > 0) {\n        classBalance = \"text-green-500\"\n      } else if (balance < 0) {\n        classBalance = \"text-red-700\"\n      } else {\n        classBalance = \"font-normal text-black\"\n      }\n\n      return classBalance;\n    }\n\n    classBalance = getClassBalance(classBalance);\n\n\n    return ( \n        <div>\n            {\n                usuario ? (\n                  <Layout>\n                      <div className=\"md:w-4/5 xl:w-3/5 mx-auto\">\n                        \n                        <h3 className=\"text-3xl font-sans font-bold text-black-500 text-center my-4\"\n                        >Balance de operaciones de\n                            <span className=\"text-blue-500\"> {usuario.nombre}</span>\n                        </h3>\n\n                        \n                        <div className=\"grid md:w-4/5 xl:w-3/5 mx-auto mb-2 items-center bg-gray-300 rounded-lg px-5 py-2\">\n                            <p className=\"font-bold text-blue-500 uppercase text-center mb-2\">Ingresos:\n                                <span className=\"font-normal text-black\"> ${ingresos} </span>\n                            </p>\n                            <p className=\"font-bold text-blue-500 uppercase text-center mb-2\">Egresos:\n                                <span className=\"font-normal text-black\"> ${egresos} </span>\n                            </p>\n                            <p className=\"font-bold text-blue-500 uppercase text-center\">Balance:\n                                <span className={classBalance}> ${balance} </span>\n                            </p>\n                        </div>\n                      \n                      </div>\n                  </Layout>\n                ) : (\n                    <>\n                        \n                    </>\n                )\n            }\n\n        </div>\n  );\n}\n \nexport default Index;\n\n    \n\n"]},"metadata":{},"sourceType":"module"}